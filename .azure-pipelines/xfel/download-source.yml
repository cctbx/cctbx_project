# Script for checking out sources and storing it as an artifact
# The artifact name is "modules"

jobs:
- job: xfel_modules
  pool:
    vmImage: ubuntu-latest
  timeoutInMinutes: 120

  steps:

  # download sources
  - checkout: self
    path: ./modules/cctbx_project

  # add conda to path
  # https://docs.microsoft.com/en-us/azure/devops/pipelines/ecosystems/anaconda?view=azure-devops&tabs=ubuntu-16-04#add-conda-to-your-system-path
  - bash: echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH

  # create environment with earlier version of git
  # https://github.com/git-lfs/git-lfs/issues/5749
  - script: |
      set -xe
      conda create -n git -c conda-forge -y git=2.44
    displayName: Create environment with git
    retryCountOnTaskFailure: 3

  - script: |
      cd $(Pipeline.Workspace)
      ln -s modules/cctbx_project/libtbx/auto_build/bootstrap.py
    displayName: Link bootstrap.py

  - script: |
      set -xe
      source $(CONDA)/etc/profile.d/conda.sh
      conda activate git
      cd $(Pipeline.Workspace)
      python bootstrap.py hot update --builder=xfel --python=311 --no-boost-src
      cd modules
      git clone https://github.com/nksauter/LS49.git
      git clone https://gitlab.com/cctbx/ls49_big_data.git
      git clone https://github.com/lanl/lunus.git
    displayName: Download sources

  - script: |
      cd $(Pipeline.Workspace)
      cd modules/uc_metrics
      git lfs install --local
      git lfs pull
      cd ../ls49_big_data
      git lfs install --local
      git lfs pull
    displayName: Download LFS files

  - task: DownloadPipelineArtifact@2
    inputs:
      source: 'specific'
      project: '$(resources.pipeline.data_cache.projectID)'
      pipeline: '$(resources.pipeline.data_cache.pipelineID)'
      artifact: 'xfel_regression'
      path: $(Pipeline.Workspace)/modules/xfel_regression
    displayName: Download xfel_regression
    continueOnError: true

  - script: |
      if [ ! -d "$(Pipeline.Workspace)/modules/xfel_regression" ]; then
        git co https://gitlab.com/cctbx/xfel_regression.git $(Pipeline.Workspace)/modules/xfel_regression
      fi
      cd $(Pipeline.Workspace)/modules/xfel_regression
      git reset --hard origin/main
      git lfs install --local
      git pull --rebase
      git lfs pull
    displayName: Update xfel_regression

  # preserve permissions and delete extra files
  - script: |
      cd $(Pipeline.Workspace)
      mv modules/kokkos/.git modules/kokkos/.git.tmp
      rm -fr modules/*/.git/*
      mv modules/kokkos/.git.tmp modules/kokkos/.git
      rm -fr modules/*/.svn/*
      rm -fr modules/*.tar
      tar -cf modules.tar modules
    displayName: Build tarball

  # publish artifact
  - publish: $(Pipeline.Workspace)/modules.tar
    artifact: xfel_modules

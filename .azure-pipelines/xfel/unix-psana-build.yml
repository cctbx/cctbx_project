# Script for building CCTBX on linux and macOS
#
# Variables:
#   CONDA: Linux, MacOSX
#   OS: linux, macos
#   PYTHON_VERSION: py311

steps:

# download components
- checkout: none

- task: DownloadPipelineArtifact@2
  displayName: Download modules tarball
  inputs:
    source: 'current'
    artifact: xfel_modules
    path: $(Pipeline.Workspace)

- script: |
    cd $(Pipeline.Workspace)
    tar -xf modules.tar
    rm modules.tar
  displayName: Extract modules tarball

- script: |
    cd $(Pipeline.Workspace)
    ln -s modules/cctbx_project/libtbx/auto_build/bootstrap.py
  displayName: Link bootstrap.py

# install miniforge
- task: DownloadPipelineArtifact@2
  inputs:
    source: 'specific'
    project: '$(resources.pipeline.data_cache.projectID)'
    pipeline: '$(resources.pipeline.data_cache.pipelineID)'
    artifact: 'miniforge'
    path: $(Pipeline.Workspace)/miniforge
  displayName: Download miniforge

- script: |
    set -xe
    bash $(Pipeline.Workspace)/miniforge/Miniforge3-$(CONDA)-x86_64.sh -b -u -p $(Pipeline.Workspace)/miniforge
    # psana1 needs some discontinued packages
    echo "restore_free_channel: true" > $(Pipeline.Workspace)/miniforge/.condarc
  displayName: Install miniforge

- script: |
    set -xe
    source $(Pipeline.Workspace)/miniforge/etc/profile.d/conda.sh
    conda env create -f $(Pipeline.Workspace)/modules/cctbx_project/xfel/conda_envs/psana_environment.yml python=$(PYTHON_FULL_VERSION)
    conda install -y -c conda-forge --no-deps -n psana_env junit-xml
    conda install -y -c conda-forge cmake pandas distro -n psana_env
  displayName: Create conda environment
  retryCountOnTaskFailure: 3

# build
- script: |
    source $(Pipeline.Workspace)/miniforge/etc/profile.d/conda.sh
    conda activate psana_env
    cd $(Pipeline.Workspace)
    rm -rf modules/boost
    python bootstrap.py --builder=xfel --use-conda $CONDA_PREFIX --nproc=4 --config-flags="--compiler=conda" --config-flags="--use_environment_flags" --config-flags="--no_bin_python" --no-boost-src build
  displayName: Configure and Build

# test
- script: |
    source $(Pipeline.Workspace)/miniforge/etc/profile.d/conda.sh
    conda activate psana_env
    cd $(Pipeline.Workspace)
    source ./build/setpaths.sh
    mkdir tests
    cd tests
    libtbx.configure xfel_regression
    chmod +x $(Pipeline.Workspace)/modules/xfel_regression/merging_test_data/xfel_merge.sh
    chmod +x $(Pipeline.Workspace)/modules/xfel_regression/merging_test_data/merge_thermo.csh
    export SIT_ROOT=/reg/g/psdm
    libtbx.run_tests_parallel module=xfel_regression nproc=4
  failOnStderr: false
  displayName: Test

- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testResultsFormat: 'JUnit'
    testResultsFiles: '$(Pipeline.Workspace)/tests/output.xml'

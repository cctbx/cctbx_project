# Script for checking out sources and storing it as an artifact
# The artifact name is "modules"
#
# Parameters:
#   flags: <empty>, --use-conda
#   optimization: <empty>, 0, 1, 2, 3

jobs:
- job: modules${{ parameters.optimization }}
  pool:
    vmImage: ubuntu-latest
  timeoutInMinutes: 120

  steps:

  # download sources
  - checkout: self
    path: ./modules/cctbx_project

  - script: |
      cd $(Pipeline.Workspace)
      ln -s modules/cctbx_project/libtbx/auto_build/bootstrap.py
    displayName: Link bootstrap.py

  - script: |
      cd $(Pipeline.Workspace)
      python bootstrap.py hot update --builder=cctbx --python=38 ${{ parameters.flags }}
    displayName: Download sources

  - script: |
      set -xe
      cd $(Pipeline.Workspace)/modules
      rm -fr scons*
    displayName: Remove packaged SCons

  - script: |
      set -xe
      cd $(Pipeline.Workspace)/modules/boost
      git checkout 1.86
    displayName: Select Boost 1.86

  - script: |
      set -xe
      cd $(Pipeline.Workspace)/modules
      git clone https://github.com/viljarjf/pyDiSCaMB.git
      cd pyDiSCaMB
      git checkout fdbe07cf04acf86a22158b951cbb5dada52ee0e6
      sed -i 's/:/\//g' .gitmodules
      sed -i 's/git@/https:\/\//g' .gitmodules
      git submodule init
      git submodule update
    displayName: Download pyDiSCaMB

  - script: |
      set -xe
      cd $(Pipeline.Workspace)/modules/dxtbx
      git checkout dials-3.22
    displayName: Select dxtbx 3.22 branch

  # change optimization level (linux, macOS)
  - script: |
      cd $(Pipeline.Workspace)/modules/cctbx_project/libtbx
      # Remove -ffast-math
      sed -i 's/-ffast-math//g' SConscript
      # Change -O level
      sed -i 's/-O3/-O${{ parameters.optimization }}/g' SConscript
    displayName: Changing optimization (linux, macOS)
    condition: or(eq('${{ parameters.optimization }}', 0), eq('${{ parameters.optimization }}', 1), eq('${{ parameters.optimization }}', 2), eq('${{ parameters.optimization }}', 3))

  # change optimization level (Windows)
  - script: |
      cd $(Pipeline.Workspace)/modules/cctbx_project/libtbx
      # Remove /fp:fast
      sed -i 's/\/fp:fast//g' SConscript
      # Change /O2 to /O1
      sed -i 's/\/O2/\/O1/g' SConscript
    displayName: Changing optimization (Windows)
    condition: or(eq('${{ parameters.optimization }}', 0), eq('${{ parameters.optimization }}', 1))

  # download test data
  - template: ./templates/download-data-cache.yml

  # delete chem_data
  - script: |
      cd $(Pipeline.Workspace)/modules
      rm -fr chem_data
    displayName: Remove chem_data

  # preserve permissions
  - script: |
      cd $(Pipeline.Workspace)
      tar -chf modules.tar modules
    displayName: Build tarball

  # publish artifact
  - publish: $(Pipeline.Workspace)/modules.tar
    artifact: modules${{ parameters.optimization }}
    continueOnError: true

# Script for building CCTBX

jobs:
- job: syntax
  pool:
    vmImage: ubuntu-latest
  timeoutInMinutes: 120
  strategy:
    maxParallel: 10
    matrix:
      python2.7:
        PYTHON_VERSION: 2.7
      python3.9:
        PYTHON_VERSION: 3.9

  steps:

  - task: InstallSSHKey@0
    inputs:
      knownHostsEntry: boa.lbl.gov ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAnPOtqyYASs6hc3fsmUQn92ovSozJsMsJyrMWjppUERX1tD4Fh0D7YaNhLvYpKi5mYVREo+tsKoOatCcqKGHCONWpzx7JHXUzfIBsy6nCeygRyyW4yuyoCuYFvOYLkaM4PrN/7XaZEnp1ux6/ZcbRxBDNK4f42svJUV39OX33tRuQWpP+O85paJr1ePHVz6U2n14a+3fRN3DBMti1dJuKOThU4djYEBQimx54pnW71eYORN2oUz+N/4RHAcomtxZpcUMl3Qadw8hD4s1XM6fzJ0Que7KefnnrPOgAEtZxKl9j09aaE70Oh+ie5Y6ckwddJ/4qZB5m2tBaEi3xuy0TSQ==
      sshPublicKey: ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA7XgVgdU9GmZuo5yVyW/htrAuxe7ypuq7IowWwfUC0WZw9SPzQ8kOGj63plF3ytx/qpgvUlS1AiywO20rZ83gHmRdAiuvt9laH09KlWEUhIhAQTzesqBG5aUT0MKo01yxijoRl5HC8w/MdOanc0h01e6IxnZvgG0N30RB1i4xVPCtR/VBmXSp4R0T+Q/gJjfQssuBxHVMrrute4V3uUHek58FL2QgUB0+zq6ipETjuCJxTSyYVAFtCYDPYs+0lAYYkWrXALCr9kX9s22jYtkyv5kNw6mEW8nhtA7GbTdJLv4M6/WYtcvQV8TDcNCfltOfl81U3gcZ9zhQDKGVoNaJEw== buildbot@cci.lbl.gov
      sshKeySecureFile: id_rsa
    displayName: Download SSH key

  - checkout: self
    path: ./modules/cctbx_project

  - script: |
      set -xe
      ssh-keyscan -t rsa gitlab.com >> ~/.ssh/known_hosts
      cd $(Pipeline.Workspace)/modules/cctbx_project
      git checkout master
      git remote add gitlab git@gitlab.com:cctbx/cctbx_project.git
      git fetch gitlab
      git push -u gitlab master
    displayName: Update GitLab mirror
    condition: eq(variables['PYTHON_VERSION'], '3.9')
    continueOnError: true

  - script: |
      set -xe

      git config user.name "Billy K. Poon"
      git config user.email "bkpoon@lbl.gov"

      cd $(Pipeline.Workspace)/modules/cctbx_project
      git revert 451e713a1d1d76b4f42673f65b1626e618975dfe
      git revert c16316c4bde588979dc8eb07441f2d1822362bec
    displayName: Fix for Python 2
    condition: eq(variables['PYTHON_VERSION'], '2.7')
    continueOnError: True

  - script: echo "##vso[task.prependpath]$CONDA/bin"
    displayName: Add conda to PATH

  - script: |
      conda create -y -c conda-forge -n py$(PYTHON_VERSION) python=$(PYTHON_VERSION) six future scons setuptools
    displayName: Create conda environment

  - script: |
      set -xe
      cd $(Pipeline.Workspace)/modules/cctbx_project
      for f in `cat .azure-pipelines/py2_syntax_exceptions.txt`; do
        echo Removing $f
        rm $f; done
    displayName: Remove Python 3 only files for Python 2 syntax check
    condition: or(eq(variables['PYTHON_VERSION'], '2.7'), eq(variables['PYTHON_VERSION'], '3.7'))

  - script: |
      source activate py$(PYTHON_VERSION)
      cd $(Pipeline.Workspace)
      mkdir build
      cd build
      python ../modules/cctbx_project/libtbx/configure.py libtbx
      make
    displayName: Configure libtbx

  - script: |
      source activate py$(PYTHON_VERSION)
      source $(Pipeline.Workspace)/build/setpaths.sh
      libtbx.py_compile_all -v .
    displayName: Check syntax

  - script: |
      source activate py$(PYTHON_VERSION)
      source $(Pipeline.Workspace)/build/setpaths.sh
      libtbx.find_clutter --verbose
    displayName: Check for clutter
